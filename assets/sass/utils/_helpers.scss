/*------------------------------------*\
$LAYOUT
\*------------------------------------*/
.wrapper {
    @include clearfix;
    max-width: $max-width;
    margin: 0 auto;
    flex: 1 0 auto;
}

.container {
    clear: both;
    max-width: 1200px;
    margin: 0 auto;
    @include outer-container;
}

.container-centered {
    @extend .container;
    text-align: center;
}

.hidden {
    display: none !important;
}

.hide-when-mobile {
    display: inline-block;
    position: relative;

    @include media($mobile) {
        display: none;
    }

}

.hide-until-small {

    @include media($small-down) {
        display: none;
    }

}

.hide-when-small {

    @include media($small) {
        display: none;
    }

}

.hide-when-medium {

    @include media($medium) {
        display: none;
    }

}

.button.hide-when-large,
.hide-when-large {
    position: relative;

    @include media($large) {
        display: none;
    }

}

.hidden-content {
    display: none;

    ul {
        @include margin-left(0);
        margin-bottom: 0;

        li {
            display: inline-block;
            @include margin-right(10px)
        }

    }

}

.clearfix {
    clear: both;
}

.fade-out {
    opacity: 0 !important;
}

.fade-in {
    opacity: 1 !important;
}

.has-fixed-bottom {
    //this goes on the body when something gets fixed to the bottom
    padding-bottom: 72px;

    @include media($small) {
        padding-bottom: 0;
    }

}

.fixed-bottom {
    width: 100%;
    border-top: $base-border;
    background: $white;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    padding: $sm-spacing;
    z-index: $fixed-at-bottom;

    @include media($small) {
        width: auto;
        border-top: 0;
        background: transparent;
        position: relative;
        padding: 0;
        z-index: $bottom;
    }

    button.button-primary {
        margin: 0;
        float: none;
    }

}

.absolute {
    position: absolute !important;
}

.visible {
    display: block !important;
}

.zebra-list {
    //this is a helper class for lists of gray & white (most list pages)
    background: $white;
    border-top: $base-border;

    &:nth-child(odd) {
        background: $dk-brown;
    }

    &:last-of-type {
        border-bottom: $base-border;
    }

}

.zebra-list-alt {
    @extend .zebra-list;

    &:nth-child(even) {
        background: $dk-brown;
    }

    &:nth-child(odd) {
        background: $white;
    }

}

.divider {
    height: 1px;
    width: 100%;
    background: $color-light-beta;
    margin: $sm-spacing 0;
    clear: both;

    &.padded {
        margin: $base-spacing 0;
    }

    &.white {
        background: $lt-brown;
    }

}

.inline {
    display: inline;
}

// media: http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/
.media {

    .img {
        @include float(left);
        //margin-right: $sm-spacing;

        img {
            display: block;
        }

    }

    .imgExt {
        @include float(right);
    }

}

.bd,
.media {
    overflow: hidden;
    _overflow: visible;
    zoom: 1;
}

.segment {
    margin: 30px auto;
}

.post-band {
    // parent needs to be position: relative;
    position: absolute;
    top: 0;
    bottom: 0;
    @include left(0);
    width: 4px;
    // border-radius: 2px 0 0 2px;
    background-color: #EEEEEE;
}

.status-indicator {
    display: inline-block;
    position: relative;
    width: 8px;
    height: 8px;
    @include equal-radius(100%);
    background-color: $color-light-beta;
    box-shadow: 0 0 0 rgba(0,0,0,.16) inset;
    @include transition(0.3s);

    svg.iconic {
        display: inline-block;
        width: 6px;
        height: 6px;
        vertical-align: middle;
        fill: $white;
        stroke: rgba(0,0,0,.24);
        stroke-width: 0.24;
    }

    &.green {
        background-color: $green;
        box-shadow: 0 0 0 rgba(0,0,0,.16) inset,
            0 0 8px $green;
    }

    &.yellow {
        background-color: $yellow;
        box-shadow: 0 0 0 rgba(0,0,0,.16) inset,
            0 0 8px $yellow;
    }

    &.red {
        background-color: $red;
        box-shadow: 0 0 0 rgba(0,0,0,.16) inset,
            0 0 8px $red;
    }

    &.empty {
        background-color: transparent;

        svg.iconic {
            fill: $color-light-beta;
            stroke-width: 0;
        }

        &:hover {
            background-color: $color-light-gamma;

            svg.iconic {
                fill: $color-light-alpha;
            }
        }
    }

    &:hover {
        @include no-shadow;
    }

    &.tooltip {

        .bug {
            top: -$tiny-spacing;
            left: 100%;
        }
    }
}

.swatch {
    display: inline-block;
    width: 14px;
    height: 14px;
    background-color: $color-light-gamma;
    box-shadow: 0 0 1px rgba(0,0,0,.24) inset;
    margin-right: $tiny-spacing;
}
